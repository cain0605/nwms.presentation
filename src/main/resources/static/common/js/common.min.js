/*********************************************************************
 * 
 * @description : Callback 관련 함수
 */
var topics = {};

jQuery.Topic = function( id ) {
	
    var callbacks,
        method,
        topic = id && topics[ id ];
 
    if ( !topic ) {
        callbacks = jQuery.Callbacks();
        topic = {
            publish: callbacks.fire,
            subscribe: callbacks.add,
            unsubscribe: callbacks.remove
        };
        if ( id ) {
            topics[ id ] = topic;
        }
    }
    return topic;
}

/*********************************************************************
 * 
 * @description : AJAX 통신 호출
 */
var gfn_action_ajaxsubmit = function (svc_id, type, url, params, fn_callback){

	url = document.URL.substr(0, document.URL.lastIndexOf(":")) + ':8100' + url;

	$.ajax({
		type: type,
		url: url,
		cache: false,
		data: params, 
		dataType: 'json',
		async: false,
		success: function (json) {
			$.Topic(svc_id).subscribe(fn_callback);
			$.Topic(svc_id).publish(svc_id, json);
			$.Topic(svc_id).unsubscribe(fn_callback);
		},
		error: function(request, status, exception) {
			var v_sText = '';
			if (request.status === 0) { 	            	
				v_sText = 'Not connect. Verify Network.';
			} else if (request.status == 404) { 	            	
				v_sText = 'Requested page not found. [404]';
			} else if (request.status == 500) { 	            	
				v_sText = 'Internal Server Error [500].';
			} else if (status === 'parsererror') { 	            	
				v_sText = 'Requested JSON parse failed.';
			} else if (status === 'timeout') { 	            	
				v_sText = 'Time out error.';
			} else if (status === 'abort') { 	            	
				v_sText = 'Ajax request aborted.';
			} else {
				v_sText = 'Uncaught Error.\n' + request.responseText;
			}

			if(v_sText != '') {
				alert(v_sText);

			} else {
				alert('code:'+request.status+'\n'+'message:'+request.responseText+'\n'+'error:'+exception);
			}
		},
		timeout:5000
    });
}